name: Deploy to Kubernetes

on:
  workflow_call:
    inputs:
      app-name:
        description: "The app's name."
        required: true
        type: string
      helm-chart:
        description: "Helm chart name."
        required: true
        type: string
      tag-prefix:
        description: "Prefix used for docker image tag."
        required: true
        type: string
      k8s-deployment-ns:
        description: "Kubernetes deployment namespace"
        required: true
        type: string
      k8s-ingress-name:
        description: "Kubernetes ingress name"
        required: true
        type: string
      k8s-ingress-tls-name:
        description: "Kubernetes ingress TLS name"
        required: true
        type: string

env:
  IMAGE_REPOSITORY: ghcr.io/coreyshupe/fixed.codes

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Kubernetes
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}
        id: install
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_K8S_CLUSTER }}
      - name: Helm install onto cluster
        run: |-
          helm upgrade --install --atomic --wait --timeout 120s --create-namespace ${{ inputs.app-name }} deploy/charts/${{ inputs.helm-chart }} \
          --namespace ${{ inputs.k8s-deployment-ns }} \
          --set fullnameOverride=${{ inputs.app-name }} \
          --set image.repository=${{ env.IMAGE_REPOSITORY }}/${{ inputs.app-name }} \
          --set image.tag=${{ inputs.docker-tag-prefix }}${GITHUB_SHA::7} \
          --set "ingress.enabled=true,ingress.hosts[0].host=${{ inputs.k8s-ingress-name }},ingress.hosts[0].paths[0].path=/,ingress.hosts[0].paths[0].pathType=ImplementationSpecific" \
          --set "ingress.tls[0].secretName=${{ inputs.k8s-ingress-tls-name }},ingress.tls[0].hosts[0]=${{ inputs.k8s-ingress-name }}"