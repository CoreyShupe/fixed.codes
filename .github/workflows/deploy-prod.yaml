name: Build and deploy (production)

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/web
  K8S_INGRESS_NAME: fixed.codes
  K8S_INGRESS_TLS_NAME: wildcard-fixed-codes-tls
  K8S_NAMESPACE: production

jobs:
  build:
    permissions:
      contents: read
      packages: write
    name: Build and deploy web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=true
            type=sha,enable=true,format=short,prefix=,suffix=
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          file: "./deploy/Dockerfile"
          build-args: |
            BUILD_PROFILE=release
            APP_NAME=web
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy web onto Kubernetes
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}
        id: install
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_K8S_CLUSTER }}
      - name: Helm install onto cluster
        run: |-
          helm upgrade --install --atomic --wait --timeout 120s --create-namespace web deploy/charts/web \
          --namespace ${{ env.K8S_NAMESPACE }} \
          --set fullnameOverride=web \
          --set image.tag=${GITHUB_SHA::7} \
          --set "ingress.enabled=true,ingress.hosts[0].host=${{ env.K8S_INGRESS_NAME }},ingress.hosts[0].paths[0].path=/,ingress.hosts[0].paths[0].pathType=ImplementationSpecific" \
          --set "ingress.tls[0].secretName=${{ env.K8S_INGRESS_TLS_NAME }},ingress.tls[0].hosts[0]=${{ env.K8S_INGRESS_NAME }}"
