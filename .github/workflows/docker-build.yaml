name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      dockerfile:
        description: "The dockerfile to use."
        required: false
        type: string
        default: "Dockerfile"
      build-path:
        description: "Maps to the docker file BUILD_PATH argument"
        required: true
        type: string
      build-profile:
        description: "Maps to the docker file BUILD_PROFILE argument"
        required: true
        type: string
      app-name:
        description: "Maps to the docker file APP_NAME argument"
        required: true
        type: string
      tag-prefix:
        description: "Prefix used for docker image tag"
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/${{ inputs.app-name }}

jobs:
  build:
    permissions:
      contents: read
      packages: write
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,format=short,prefix=${{ inputs.tag-prefix }},suffix=
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          file: "./deploy/${{ inputs.dockerfile }}"
          build-args: |
            BUILD_PROFILE=${{ inputs.build-profile }}
            BUILD_PATH=${{ inputs.build-path }}
            APP_NAME=${{ inputs.app-name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max